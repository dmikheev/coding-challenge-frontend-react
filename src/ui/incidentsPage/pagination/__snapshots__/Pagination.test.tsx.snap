// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<styled.div>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    &lt;&lt; First
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    &lt; Prev
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="3"
    onClick={[Function]}
    variant="contained"
  >
    3
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="4"
    onClick={[Function]}
    variant="contained"
  >
    4
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    color="secondary"
    key="5"
    onClick={[Function]}
    variant="contained"
  >
    5
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="6"
    onClick={[Function]}
    variant="contained"
  >
    6
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="7"
    onClick={[Function]}
    variant="contained"
  >
    7
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Next &gt;
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Last &gt;&gt;
  </Styled(WithStyles(ForwardRef(Button)))>
</styled.div>
`;

exports[`renders correctly when activePage = 1 1`] = `
<styled.div>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    &lt;&lt; First
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    &lt; Prev
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    color="secondary"
    key="1"
    onClick={[Function]}
    variant="contained"
  >
    1
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="2"
    onClick={[Function]}
    variant="contained"
  >
    2
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="3"
    onClick={[Function]}
    variant="contained"
  >
    3
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Next &gt;
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Last &gt;&gt;
  </Styled(WithStyles(ForwardRef(Button)))>
</styled.div>
`;

exports[`renders correctly when activePage is the last page 1`] = `
<styled.div>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    &lt;&lt; First
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    &lt; Prev
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="8"
    onClick={[Function]}
    variant="contained"
  >
    8
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="9"
    onClick={[Function]}
    variant="contained"
  >
    9
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    color="secondary"
    key="10"
    onClick={[Function]}
    variant="contained"
  >
    10
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    Next &gt;
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    Last &gt;&gt;
  </Styled(WithStyles(ForwardRef(Button)))>
</styled.div>
`;

exports[`renders correctly when totalPages < 5 1`] = `
<styled.div>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    &lt;&lt; First
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    &lt; Prev
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    color="secondary"
    key="1"
    onClick={[Function]}
    variant="contained"
  >
    1
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="2"
    onClick={[Function]}
    variant="contained"
  >
    2
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    key="3"
    onClick={[Function]}
    variant="contained"
  >
    3
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Next &gt;
  </Styled(WithStyles(ForwardRef(Button)))>
  <Styled(WithStyles(ForwardRef(Button)))
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    Last &gt;&gt;
  </Styled(WithStyles(ForwardRef(Button)))>
</styled.div>
`;
